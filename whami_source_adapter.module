<?php
/**
 * @file
 * whami Source Adapter module
 */

module_load_include('inc', 'whami_source_adapter', 'whami_source_adapter_toolkit');
module_load_include('inc', 'whami_source_adapter', 'whami_source_adapter_api');

/**
 *  Function that parses the results from an specific source adapter
 *  to the main format
 *
 * @param array $result
 *   result
 * @param int $max_rows
 *   maximum rows
 * @param int $titleshrink
 *   titleshrink
 * @param int $bodyshrink
 *   bodyshrink
 * @param int $linkshrink
 *   linkshrink
 * @param string $categories_id
 *   Categories
 * @param string $source_id
 *   source id
 * @param string $session_id
 *   sesion id
 *
 * @return array
 *   Parsed response for the Source Adapter
 */
function whami_source_adapter_parse_response($result, $source_id = '', $max_rows = 10, $render = true, $session_id = '') { //$categories_id = NULL

  $map = whami_get_datasource_nodes();
  $sources = whami_build_data_sources($map);

  $result = array_slice($result, 0, $max_rows);

  foreach ($result as $key => $value) {
    if(!strlen($result[$key]['source_id'])) $result[$key]['source_id'] = $source_id;
    if(!strlen($result[$key]['url'])) $result[$key]['url'] = $result[$key]['full_url'];
    if(!strlen($result[$key]['node_url'])) $result[$key]['node_url'] = $result[$key]['full_url'];
    if(!strlen($result[$key]['url_hash'])) $result[$key]['url_hash'] = hash("md5", $result[$key]['full_url']);

    if(strlen($session_id)) $result[$key]['sid'] = $session_id;

    $result[$key]['source_name'] = $sources[$result[$key]['source_id']]['source_name'];
    $result[$key]['own_whami_content'] = $sources[$result[$key]['source_id']]['own_whami_content']; //$sources[$value['sourceID']]->field_whamiowncontent[0]['value'];

    $result[$key]['source_image'] = $sources[$result[$key]['source_id']]['source_image']['filepath'];//$sources[$value['sourceID']]->field_sourceimage[0];
    $result[$key]['source_logo'] = $sources[$result[$key]['source_id']]['source_logo']['filepath'];
    $result[$key]['map_display_icon'] =  $sources[$result[$key]['source_id']]['map_display_icon']; //$sources[$value['sourceID']]->field_mapdisplayicon[0];

    //$result[$key]['categoryID'] = $categories_id;

    //Shrink fields
    $titleshrink = $sources[$result[$key]['source_id']]['titleshrink'];
    $bodyshrink = $sources[$result[$key]['source_id']]['bodyshrink'];
    $linkshrink = $sources[$result[$key]['source_id']]['linkshrink'];

    if (strlen($result[$key]['title']) > $titleshrink && $titleshrink > 1) {
     $result[$key]['title'] = substr($result[$key]['title'], 0, $titleshrink) . "...";
    }
    if (strlen($result[$key]['body']) > $bodyshrink && $bodyshrink > 1) {
    	$result[$key]['body'] = substr($result[$key]['body'], 0, $bodyshrink) . "...";
    }
    if (strlen($result[$key]['url']) > $linkshrink && $linkshrink > 1) {
      $result[$key]['url'] = substr($result[$key]['url'], 0, $linkshrink) . "...";
    }

    if($render) {

//      if(!$result[$key]['cached']) {
//       $result[$key]['body'] = theme('whami_place_licence', $result[$key], 'body', $result[$key]['node_url'], $result[$key]['url']);
//      }


      if (!strlen($result[$key]['teaser'])) {
//        if(!$result[$key]['cached']) {
         $result[$key]['teaser'] = theme('whami_place_teaser', $result[$key], false);
//        }
      }
      else {
//        $result[$key]['teaser'] = $result[$key]['body'];
      }

//      $result[$key]['infoBubble'] = theme('whami_infobubble', $result[$key], $sources[$result[$key]['source_id']]);
    }

  }

  return $result;
}

/**
 * Implementation of hook_block().
 */
function whami_source_adapter_block($op = 'list', $delta = 0, $edit = array()) {
  module_load_include('inc', 'whami_source_adapter');
  module_load_include('inc', 'whami_source_adapter', 'whami_source_adapter_toolkit');

  switch ($op) {
    case 'list':
      return array(
        'whami_place_by_url' => array('info' => t('whami Source Adapter: Place info'), 'cache' => BLOCK_CACHE_PER_PAGE),
        'whami_places_nearby' => array('info' => t('whami Source Adapter: Places nearby'), 'cache' => BLOCK_CACHE_PER_PAGE),
      );

    case 'configure':
      if(strcmp($delta, 'whami_place_by_url') == 0) {
        return _whami_source_adapter_block_config_form('whami', $delta, array("linkfield", "textfield"));
      }
      if(strcmp($delta, 'whami_places_nearby') == 0) {
        return _whami_source_adapter_block_config_form('whami', $delta, array("geofield", "sources"));
      }

    case 'save':
      _whami_source_adapter_block_config_save('whami', $delta, $edit);
      break;

    case 'view':
      $block = array();

      $nid = check_plain(arg(1));
      if (strcmp(arg(0), 'node') == 0 && is_numeric($nid) && !arg(2)) {
        $node = node_load($nid);

        if ($node !== FALSE) {

          //Check if the block is activated for this content type
          if( !variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'active'), false) ) return;

          $langcode = $GLOBALS['language']->language;
          $node_lang = strlen($node->language) ? $node->language : $langcode;

          if(strcmp($delta, 'whami_place_by_url') == 0) {

            $link_field_name = variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'linkfield'), '');
            $text_field_name = variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'textfield'), '');

            if (strlen($link_field_name) && strlen($text_field_name)) {
              $wiki_link = $node->{$link_field_name}[0]['url'];
              $wiki_link = html_entity_decode($wiki_link, ENT_QUOTES, 'UTF-8');

              $source_id = $node->{$text_field_name}[0]['value'];

              $data = whami_source_adapter_get_place_by_url($wiki_link, $source_id, $node_lang);

//              $whami_place_key = array_rand($place_list, 1);
//              $place = $place_list[$whami_place_key];

              if(is_array($data) && count($data)) {
                $block['subject'] = t('whami Place Info');
                $block['content'] = $data[array_rand($data, 1)]['teaser'];//theme('whami_source_adapter_wikipedia_content', $wikipedia_data);
              }
            }

          }

          if(strcmp($delta, 'whami_places_nearby') == 0) {

            $geo_field_name = variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'geofield'), '');
            if (strlen($geo_field_name)) {

              $point = geo_value($node->{$geo_field_name}[0]['wkb'], 'array', 'wkb');
              $max_return_results = variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'max_results'), 10);
              $max_request_results = variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'max_request_results'), 10);
              $radius = variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'radius'), 10);

              $source_id = variable_get(_whami_source_adapter_conf_variable_name('whami', $delta, $node->type, 'sources'), false);
              if($source_id) {
                $source_id = explode('+', $source_id);

                $data = whami_source_adapter_geopoint_radius($point['lat'], $point['lon'], $radius, $source_id, $langcode, $max_return_results, $max_request_results);
                $block['subject'] = t('whami Places nearby');
                $block['content'] = theme('whami_place_list', $data);
              }
            }

          }

          return $block;
        }

      }
  }
}

/**
 * Implementation of hook_theme().
 */
function whami_source_adapter_theme() {
  return array(
    'whami_place_teaser' => array(
      'arguments' => array('whami_place' => array(), 'whami_show_type' => false, 'langcode' => ''),
      'path' => drupal_get_path('module', 'whami_source_adapter') . '/theme',
      'file' => 'whami_source_adapter.theme.inc',
      'template' => 'whami_place_teaser',
    ),
    'whami_place_list' => array(
      'arguments' => array('whami_place_list' => array(), 'whami_op' => 'teaser', ), //'source' => '', 'langcode' => ''
      'path' => drupal_get_path('module', 'whami_source_adapter') . '/theme',
      'file' => 'whami_source_adapter.theme.inc',
      'template' => 'whami_place_list',
    ),
    'whami_place_type' => array(
      'arguments' => array('whami_place' => array(), 'whami_short_desc' => false),
      'path' => drupal_get_path('module', 'whami_source_adapter') . '/theme',
      'file' => 'whami_source_adapter.theme.inc',
      'template' => 'whami_place_type',
    ),
    'whami_place_licence' => array(
      'arguments' => array('whami_place' => array(), 'whami_long_url' => NULL, 'whami_short_url' => NULL, 'show_icon' => true, 'whami_short_desc' => false),
      'path' => drupal_get_path('module', 'whami_source_adapter') . '/theme',
      'file' => 'whami_source_adapter.theme.inc',
      'template' => 'whami_place_licence',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function whami_source_adapter_menu() {
  $items = array();

  $items['whami/SourceAdapter'] = array(
    'title' => 'Whami SourceAdapter',
    'page callback' => 'whami_source_adapter_demo',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Function that implements a demo for the Source Adapter
 */
function whami_source_adapter_demo() {
  $session_id = check_plain($_COOKIE[session_name()]);

  /* bbox -> "Ibiza"
    	'north' => 29,
    	'east' => -13,
      'south' => 27,
      'west' => -18
  */

  /* bbox -> Dublin
    	'north' => 53.419354,
    	'east' => -5.975189,
      'south' => 53.206855,
      'west' => -6.432495
  */

  /* bbox -> Australia
  	'north' => -31.278551,
  	'south' => -45.79817,
  	'east' => 154.248047,
  	'west' => 134.121094
  */

//  $a = whami_source_adapter_bounding_box(array(
//    'north' => -31.278551,
//    'south' => -45.79817,
//    'east' => 154.248047,
//    'west' => 134.121094,
//  ), 'de', array("03"), 'panoramio', 3, 10, 10, 10, 20, $session_id);
//  $b = whami_source_adapter_geopoint_radius(40, -3, 10, 'es', array("03"), 'panoramio', 3, 10, 10, 10, 20, $session_id);
//
//  $table_a = '<h2>whami_source_adapter_bounding_box</h2><br /> results for: whami_source_adapter_bounding_box(NULL, \'es\', array("01"), \'wikipedia\', 3, 10, 10, 10, 20)';
//  $table_a .= theme_table(array_keys($a[0]), $a);
//
//  $table_b = '<h2>whami_source_adapter_geopoint_radius</h2><br /> results for: whami_source_adapter_geopoint_radius(40,-3,10,\'es\',array("01"),\'wikipedia\', 3, 10, 10 , 10 , 20)';
//  $table_b .= theme_table(array_keys($b[0]), $b);

  $place_list = whami_source_adapter_call_method('get_place_for_nid', 2864, 'node');
//    $place_list = whami_build_data_sources();
//
    $place_table = theme_table(array_keys($place_list[array_rand($place_list, 1)]), $place_list);

  return $place_table;
//  return $table_a . $table_b;
}
